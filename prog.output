Nonterminals useless in grammar

   ReturnType
   argument


Terminals unused in grammar

   DOUBLE
   FUNCNAME
   REM
   IF
   THEN


Rules useless in grammar

   67 ReturnType: VOID
   68           | type

   69 argument: type variable
   70         | variable


State 25 conflicts: 1 shift/reduce
State 58 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: function

    2 line: statements SEMICOLON
    3     | statements SEMICOLON line

    4 function: type variable OP argListOpt CP OB line CB
    5         | VOID variable OP argListOpt CP OB line CB

    6 argListOpt: commondeclarations
    7           | argListOpt COMMA commondeclarations
    8           | /* empty */

    9 ReturnStmt: RETURN expr
   10           | RETURN

   11 type: INT
   12     | CHAR
   13     | FLOAT
   14     | STRING
   15     | BOOL

   16 variable: IDENTIFIER

   17 statements: commondeclarations
   18           | multiplearguments ASSIGN expr
   19           | variable ASSIGN string
   20           | variable ASSIGN expr
   21           | variable INC
   22           | variable DEC
   23           | multipleConditions
   24           | ReturnStmt

   25 commondeclarations: multiplearguments
   26                   | CONST type variable ASSIGN number
   27                   | CONST type variable ASSIGN string
   28                   | multiplearguments ASSIGN string

   29 multiplearguments: type variable
   30                  | type variable multipledeclarations

   31 multipledeclarations: COMMA variable
   32                     | COMMA variable multipledeclarations

   33 comparsions: Equals
   34            | GE
   35            | LE
   36            | L
   37            | G

   38 Equals: EQ
   39       | NEQ

   40 BitOperations: XOR
   41              | BitwiseOR
   42              | BitwiseAnd

   43 BOOLEANS: TRUE
   44         | FALSE

   45 multipleConditions: condition
   46                   | condition logicals multipleConditions

   47 condition: expr comparsions expr

   48 logicals: AND
   49         | OR

   50 number: NUM
   51       | DECIMAL

   52 string: EXPSTR
   53       | EXPCHAR

   54 MathOperations: ADD
   55               | SUB

   56 expr: expr BitOperations factor
   57     | expr2
   58     | BOOLEANS

   59 expr2: expr2 MathOperations factor
   60      | term

   61 term: term MUL factor
   62     | term DIV factor
   63     | factor

   64 factor: number
   65       | variable
   66       | OP expr CP


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER (258) 16
NUM (259) 50
DECIMAL (260) 51
EXPCHAR (261) 53
EXPSTR (262) 52
CHAR (263) 12
INT (264) 11
FLOAT (265) 13
DOUBLE (266)
STRING (267) 14
VOID (268) 5
RETURN (269) 9 10
BOOL (270) 15
EQ (271) 38
LE (272) 35
GE (273) 34
AND (274) 48
OR (275) 49
L (276) 36
G (277) 37
NEQ (278) 39
ASSIGN (279) 18 19 20 26 27 28
FUNCNAME (280)
ADD (281) 54
SUB (282) 55
MUL (283) 61
DIV (284) 62
INC (285) 21
DEC (286) 22
REM (287)
XOR (288) 40
BitwiseAnd (289) 42
BitwiseOR (290) 41
SEMICOLON (291) 2 3
COMMA (292) 7 31 32
IF (293)
THEN (294)
CONST (295) 26 27
OP (296) 4 5 66
CP (297) 4 5 66
OB (298) 4 5
CB (299) 4 5
FALSE (300) 44
TRUE (301) 43


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
line (49)
    on left: 2 3, on right: 3 4 5
function (50)
    on left: 4 5, on right: 1
argListOpt (51)
    on left: 6 7 8, on right: 4 5 7
ReturnStmt (52)
    on left: 9 10, on right: 24
type (53)
    on left: 11 12 13 14 15, on right: 4 26 27 29 30
variable (54)
    on left: 16, on right: 4 5 19 20 21 22 26 27 29 30 31 32 65
statements (55)
    on left: 17 18 19 20 21 22 23 24, on right: 2 3
commondeclarations (56)
    on left: 25 26 27 28, on right: 6 7 17
multiplearguments (57)
    on left: 29 30, on right: 18 25 28
multipledeclarations (58)
    on left: 31 32, on right: 30 32
comparsions (59)
    on left: 33 34 35 36 37, on right: 47
Equals (60)
    on left: 38 39, on right: 33
BitOperations (61)
    on left: 40 41 42, on right: 56
BOOLEANS (62)
    on left: 43 44, on right: 58
multipleConditions (63)
    on left: 45 46, on right: 23 46
condition (64)
    on left: 47, on right: 45 46
logicals (65)
    on left: 48 49, on right: 46
number (66)
    on left: 50 51, on right: 26 64
string (67)
    on left: 52 53, on right: 19 27 28
MathOperations (68)
    on left: 54 55, on right: 59
expr (69)
    on left: 56 57 58, on right: 9 18 20 47 56 66
expr2 (70)
    on left: 59 60, on right: 57 59
term (71)
    on left: 61 62 63, on right: 60 61 62
factor (72)
    on left: 64 65 66, on right: 56 59 61 62 63


state 0

    0 $accept: . program $end

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    VOID    shift, and go to state 5
    BOOL    shift, and go to state 6

    program   go to state 7
    function  go to state 8
    type      go to state 9


state 1

   12 type: CHAR .

    $default  reduce using rule 12 (type)


state 2

   11 type: INT .

    $default  reduce using rule 11 (type)


state 3

   13 type: FLOAT .

    $default  reduce using rule 13 (type)


state 4

   14 type: STRING .

    $default  reduce using rule 14 (type)


state 5

    5 function: VOID . variable OP argListOpt CP OB line CB

    IDENTIFIER  shift, and go to state 10

    variable  go to state 11


state 6

   15 type: BOOL .

    $default  reduce using rule 15 (type)


state 7

    0 $accept: program . $end

    $end  shift, and go to state 12


state 8

    1 program: function .

    $default  reduce using rule 1 (program)


state 9

    4 function: type . variable OP argListOpt CP OB line CB

    IDENTIFIER  shift, and go to state 10

    variable  go to state 13


state 10

   16 variable: IDENTIFIER .

    $default  reduce using rule 16 (variable)


state 11

    5 function: VOID variable . OP argListOpt CP OB line CB

    OP  shift, and go to state 14


state 12

    0 $accept: program $end .

    $default  accept


state 13

    4 function: type variable . OP argListOpt CP OB line CB

    OP  shift, and go to state 15


state 14

    5 function: VOID variable OP . argListOpt CP OB line CB

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 6
    CONST   shift, and go to state 16

    $default  reduce using rule 8 (argListOpt)

    argListOpt          go to state 17
    type                go to state 18
    commondeclarations  go to state 19
    multiplearguments   go to state 20


state 15

    4 function: type variable OP . argListOpt CP OB line CB

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 6
    CONST   shift, and go to state 16

    $default  reduce using rule 8 (argListOpt)

    argListOpt          go to state 21
    type                go to state 18
    commondeclarations  go to state 19
    multiplearguments   go to state 20


state 16

   26 commondeclarations: CONST . type variable ASSIGN number
   27                   | CONST . type variable ASSIGN string

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 6

    type  go to state 22


state 17

    5 function: VOID variable OP argListOpt . CP OB line CB
    7 argListOpt: argListOpt . COMMA commondeclarations

    COMMA  shift, and go to state 23
    CP     shift, and go to state 24


state 18

   29 multiplearguments: type . variable
   30                  | type . variable multipledeclarations

    IDENTIFIER  shift, and go to state 10

    variable  go to state 25


state 19

    6 argListOpt: commondeclarations .

    $default  reduce using rule 6 (argListOpt)


state 20

   25 commondeclarations: multiplearguments .
   28                   | multiplearguments . ASSIGN string

    ASSIGN  shift, and go to state 26

    $default  reduce using rule 25 (commondeclarations)


state 21

    4 function: type variable OP argListOpt . CP OB line CB
    7 argListOpt: argListOpt . COMMA commondeclarations

    COMMA  shift, and go to state 23
    CP     shift, and go to state 27


state 22

   26 commondeclarations: CONST type . variable ASSIGN number
   27                   | CONST type . variable ASSIGN string

    IDENTIFIER  shift, and go to state 10

    variable  go to state 28


state 23

    7 argListOpt: argListOpt COMMA . commondeclarations

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 6
    CONST   shift, and go to state 16

    type                go to state 18
    commondeclarations  go to state 29
    multiplearguments   go to state 20


state 24

    5 function: VOID variable OP argListOpt CP . OB line CB

    OB  shift, and go to state 30


state 25

   29 multiplearguments: type variable .
   30                  | type variable . multipledeclarations

    COMMA  shift, and go to state 31

    COMMA     [reduce using rule 29 (multiplearguments)]
    $default  reduce using rule 29 (multiplearguments)

    multipledeclarations  go to state 32


state 26

   28 commondeclarations: multiplearguments ASSIGN . string

    EXPCHAR  shift, and go to state 33
    EXPSTR   shift, and go to state 34

    string  go to state 35


state 27

    4 function: type variable OP argListOpt CP . OB line CB

    OB  shift, and go to state 36


state 28

   26 commondeclarations: CONST type variable . ASSIGN number
   27                   | CONST type variable . ASSIGN string

    ASSIGN  shift, and go to state 37


state 29

    7 argListOpt: argListOpt COMMA commondeclarations .

    $default  reduce using rule 7 (argListOpt)


state 30

    5 function: VOID variable OP argListOpt CP OB . line CB

    IDENTIFIER  shift, and go to state 10
    NUM         shift, and go to state 38
    DECIMAL     shift, and go to state 39
    CHAR        shift, and go to state 1
    INT         shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    RETURN      shift, and go to state 40
    BOOL        shift, and go to state 6
    CONST       shift, and go to state 16
    OP          shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43

    line                go to state 44
    ReturnStmt          go to state 45
    type                go to state 18
    variable            go to state 46
    statements          go to state 47
    commondeclarations  go to state 48
    multiplearguments   go to state 49
    BOOLEANS            go to state 50
    multipleConditions  go to state 51
    condition           go to state 52
    number              go to state 53
    expr                go to state 54
    expr2               go to state 55
    term                go to state 56
    factor              go to state 57


state 31

   31 multipledeclarations: COMMA . variable
   32                     | COMMA . variable multipledeclarations

    IDENTIFIER  shift, and go to state 10

    variable  go to state 58


state 32

   30 multiplearguments: type variable multipledeclarations .

    $default  reduce using rule 30 (multiplearguments)


state 33

   53 string: EXPCHAR .

    $default  reduce using rule 53 (string)


state 34

   52 string: EXPSTR .

    $default  reduce using rule 52 (string)


state 35

   28 commondeclarations: multiplearguments ASSIGN string .

    $default  reduce using rule 28 (commondeclarations)


state 36

    4 function: type variable OP argListOpt CP OB . line CB

    IDENTIFIER  shift, and go to state 10
    NUM         shift, and go to state 38
    DECIMAL     shift, and go to state 39
    CHAR        shift, and go to state 1
    INT         shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    RETURN      shift, and go to state 40
    BOOL        shift, and go to state 6
    CONST       shift, and go to state 16
    OP          shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43

    line                go to state 59
    ReturnStmt          go to state 45
    type                go to state 18
    variable            go to state 46
    statements          go to state 47
    commondeclarations  go to state 48
    multiplearguments   go to state 49
    BOOLEANS            go to state 50
    multipleConditions  go to state 51
    condition           go to state 52
    number              go to state 53
    expr                go to state 54
    expr2               go to state 55
    term                go to state 56
    factor              go to state 57


state 37

   26 commondeclarations: CONST type variable ASSIGN . number
   27                   | CONST type variable ASSIGN . string

    NUM      shift, and go to state 38
    DECIMAL  shift, and go to state 39
    EXPCHAR  shift, and go to state 33
    EXPSTR   shift, and go to state 34

    number  go to state 60
    string  go to state 61


state 38

   50 number: NUM .

    $default  reduce using rule 50 (number)


state 39

   51 number: DECIMAL .

    $default  reduce using rule 51 (number)


state 40

    9 ReturnStmt: RETURN . expr
   10           | RETURN .

    IDENTIFIER  shift, and go to state 10
    NUM         shift, and go to state 38
    DECIMAL     shift, and go to state 39
    OP          shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43

    $default  reduce using rule 10 (ReturnStmt)

    variable  go to state 62
    BOOLEANS  go to state 50
    number    go to state 53
    expr      go to state 63
    expr2     go to state 55
    term      go to state 56
    factor    go to state 57


state 41

   66 factor: OP . expr CP

    IDENTIFIER  shift, and go to state 10
    NUM         shift, and go to state 38
    DECIMAL     shift, and go to state 39
    OP          shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43

    variable  go to state 62
    BOOLEANS  go to state 50
    number    go to state 53
    expr      go to state 64
    expr2     go to state 55
    term      go to state 56
    factor    go to state 57


state 42

   44 BOOLEANS: FALSE .

    $default  reduce using rule 44 (BOOLEANS)


state 43

   43 BOOLEANS: TRUE .

    $default  reduce using rule 43 (BOOLEANS)


state 44

    5 function: VOID variable OP argListOpt CP OB line . CB

    CB  shift, and go to state 65


state 45

   24 statements: ReturnStmt .

    $default  reduce using rule 24 (statements)


state 46

   19 statements: variable . ASSIGN string
   20           | variable . ASSIGN expr
   21           | variable . INC
   22           | variable . DEC
   65 factor: variable .

    ASSIGN  shift, and go to state 66
    INC     shift, and go to state 67
    DEC     shift, and go to state 68

    $default  reduce using rule 65 (factor)


state 47

    2 line: statements . SEMICOLON
    3     | statements . SEMICOLON line

    SEMICOLON  shift, and go to state 69


state 48

   17 statements: commondeclarations .

    $default  reduce using rule 17 (statements)


state 49

   18 statements: multiplearguments . ASSIGN expr
   25 commondeclarations: multiplearguments .
   28                   | multiplearguments . ASSIGN string

    ASSIGN  shift, and go to state 70

    $default  reduce using rule 25 (commondeclarations)


state 50

   58 expr: BOOLEANS .

    $default  reduce using rule 58 (expr)


state 51

   23 statements: multipleConditions .

    $default  reduce using rule 23 (statements)


state 52

   45 multipleConditions: condition .
   46                   | condition . logicals multipleConditions

    AND  shift, and go to state 71
    OR   shift, and go to state 72

    $default  reduce using rule 45 (multipleConditions)

    logicals  go to state 73


state 53

   64 factor: number .

    $default  reduce using rule 64 (factor)


state 54

   47 condition: expr . comparsions expr
   56 expr: expr . BitOperations factor

    EQ          shift, and go to state 74
    LE          shift, and go to state 75
    GE          shift, and go to state 76
    L           shift, and go to state 77
    G           shift, and go to state 78
    NEQ         shift, and go to state 79
    XOR         shift, and go to state 80
    BitwiseAnd  shift, and go to state 81
    BitwiseOR   shift, and go to state 82

    comparsions    go to state 83
    Equals         go to state 84
    BitOperations  go to state 85


state 55

   57 expr: expr2 .
   59 expr2: expr2 . MathOperations factor

    ADD  shift, and go to state 86
    SUB  shift, and go to state 87

    $default  reduce using rule 57 (expr)

    MathOperations  go to state 88


state 56

   60 expr2: term .
   61 term: term . MUL factor
   62     | term . DIV factor

    MUL  shift, and go to state 89
    DIV  shift, and go to state 90

    $default  reduce using rule 60 (expr2)


state 57

   63 term: factor .

    $default  reduce using rule 63 (term)


state 58

   31 multipledeclarations: COMMA variable .
   32                     | COMMA variable . multipledeclarations

    COMMA  shift, and go to state 31

    COMMA     [reduce using rule 31 (multipledeclarations)]
    $default  reduce using rule 31 (multipledeclarations)

    multipledeclarations  go to state 91


state 59

    4 function: type variable OP argListOpt CP OB line . CB

    CB  shift, and go to state 92


state 60

   26 commondeclarations: CONST type variable ASSIGN number .

    $default  reduce using rule 26 (commondeclarations)


state 61

   27 commondeclarations: CONST type variable ASSIGN string .

    $default  reduce using rule 27 (commondeclarations)


state 62

   65 factor: variable .

    $default  reduce using rule 65 (factor)


state 63

    9 ReturnStmt: RETURN expr .
   56 expr: expr . BitOperations factor

    XOR         shift, and go to state 80
    BitwiseAnd  shift, and go to state 81
    BitwiseOR   shift, and go to state 82

    $default  reduce using rule 9 (ReturnStmt)

    BitOperations  go to state 85


state 64

   56 expr: expr . BitOperations factor
   66 factor: OP expr . CP

    XOR         shift, and go to state 80
    BitwiseAnd  shift, and go to state 81
    BitwiseOR   shift, and go to state 82
    CP          shift, and go to state 93

    BitOperations  go to state 85


state 65

    5 function: VOID variable OP argListOpt CP OB line CB .

    $default  reduce using rule 5 (function)


state 66

   19 statements: variable ASSIGN . string
   20           | variable ASSIGN . expr

    IDENTIFIER  shift, and go to state 10
    NUM         shift, and go to state 38
    DECIMAL     shift, and go to state 39
    EXPCHAR     shift, and go to state 33
    EXPSTR      shift, and go to state 34
    OP          shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43

    variable  go to state 62
    BOOLEANS  go to state 50
    number    go to state 53
    string    go to state 94
    expr      go to state 95
    expr2     go to state 55
    term      go to state 56
    factor    go to state 57


state 67

   21 statements: variable INC .

    $default  reduce using rule 21 (statements)


state 68

   22 statements: variable DEC .

    $default  reduce using rule 22 (statements)


state 69

    2 line: statements SEMICOLON .
    3     | statements SEMICOLON . line

    IDENTIFIER  shift, and go to state 10
    NUM         shift, and go to state 38
    DECIMAL     shift, and go to state 39
    CHAR        shift, and go to state 1
    INT         shift, and go to state 2
    FLOAT       shift, and go to state 3
    STRING      shift, and go to state 4
    RETURN      shift, and go to state 40
    BOOL        shift, and go to state 6
    CONST       shift, and go to state 16
    OP          shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43

    $default  reduce using rule 2 (line)

    line                go to state 96
    ReturnStmt          go to state 45
    type                go to state 18
    variable            go to state 46
    statements          go to state 47
    commondeclarations  go to state 48
    multiplearguments   go to state 49
    BOOLEANS            go to state 50
    multipleConditions  go to state 51
    condition           go to state 52
    number              go to state 53
    expr                go to state 54
    expr2               go to state 55
    term                go to state 56
    factor              go to state 57


state 70

   18 statements: multiplearguments ASSIGN . expr
   28 commondeclarations: multiplearguments ASSIGN . string

    IDENTIFIER  shift, and go to state 10
    NUM         shift, and go to state 38
    DECIMAL     shift, and go to state 39
    EXPCHAR     shift, and go to state 33
    EXPSTR      shift, and go to state 34
    OP          shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43

    variable  go to state 62
    BOOLEANS  go to state 50
    number    go to state 53
    string    go to state 35
    expr      go to state 97
    expr2     go to state 55
    term      go to state 56
    factor    go to state 57


state 71

   48 logicals: AND .

    $default  reduce using rule 48 (logicals)


state 72

   49 logicals: OR .

    $default  reduce using rule 49 (logicals)


state 73

   46 multipleConditions: condition logicals . multipleConditions

    IDENTIFIER  shift, and go to state 10
    NUM         shift, and go to state 38
    DECIMAL     shift, and go to state 39
    OP          shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43

    variable            go to state 62
    BOOLEANS            go to state 50
    multipleConditions  go to state 98
    condition           go to state 52
    number              go to state 53
    expr                go to state 54
    expr2               go to state 55
    term                go to state 56
    factor              go to state 57


state 74

   38 Equals: EQ .

    $default  reduce using rule 38 (Equals)


state 75

   35 comparsions: LE .

    $default  reduce using rule 35 (comparsions)


state 76

   34 comparsions: GE .

    $default  reduce using rule 34 (comparsions)


state 77

   36 comparsions: L .

    $default  reduce using rule 36 (comparsions)


state 78

   37 comparsions: G .

    $default  reduce using rule 37 (comparsions)


state 79

   39 Equals: NEQ .

    $default  reduce using rule 39 (Equals)


state 80

   40 BitOperations: XOR .

    $default  reduce using rule 40 (BitOperations)


state 81

   42 BitOperations: BitwiseAnd .

    $default  reduce using rule 42 (BitOperations)


state 82

   41 BitOperations: BitwiseOR .

    $default  reduce using rule 41 (BitOperations)


state 83

   47 condition: expr comparsions . expr

    IDENTIFIER  shift, and go to state 10
    NUM         shift, and go to state 38
    DECIMAL     shift, and go to state 39
    OP          shift, and go to state 41
    FALSE       shift, and go to state 42
    TRUE        shift, and go to state 43

    variable  go to state 62
    BOOLEANS  go to state 50
    number    go to state 53
    expr      go to state 99
    expr2     go to state 55
    term      go to state 56
    factor    go to state 57


state 84

   33 comparsions: Equals .

    $default  reduce using rule 33 (comparsions)


state 85

   56 expr: expr BitOperations . factor

    IDENTIFIER  shift, and go to state 10
    NUM         shift, and go to state 38
    DECIMAL     shift, and go to state 39
    OP          shift, and go to state 41

    variable  go to state 62
    number    go to state 53
    factor    go to state 100


state 86

   54 MathOperations: ADD .

    $default  reduce using rule 54 (MathOperations)


state 87

   55 MathOperations: SUB .

    $default  reduce using rule 55 (MathOperations)


state 88

   59 expr2: expr2 MathOperations . factor

    IDENTIFIER  shift, and go to state 10
    NUM         shift, and go to state 38
    DECIMAL     shift, and go to state 39
    OP          shift, and go to state 41

    variable  go to state 62
    number    go to state 53
    factor    go to state 101


state 89

   61 term: term MUL . factor

    IDENTIFIER  shift, and go to state 10
    NUM         shift, and go to state 38
    DECIMAL     shift, and go to state 39
    OP          shift, and go to state 41

    variable  go to state 62
    number    go to state 53
    factor    go to state 102


state 90

   62 term: term DIV . factor

    IDENTIFIER  shift, and go to state 10
    NUM         shift, and go to state 38
    DECIMAL     shift, and go to state 39
    OP          shift, and go to state 41

    variable  go to state 62
    number    go to state 53
    factor    go to state 103


state 91

   32 multipledeclarations: COMMA variable multipledeclarations .

    $default  reduce using rule 32 (multipledeclarations)


state 92

    4 function: type variable OP argListOpt CP OB line CB .

    $default  reduce using rule 4 (function)


state 93

   66 factor: OP expr CP .

    $default  reduce using rule 66 (factor)


state 94

   19 statements: variable ASSIGN string .

    $default  reduce using rule 19 (statements)


state 95

   20 statements: variable ASSIGN expr .
   56 expr: expr . BitOperations factor

    XOR         shift, and go to state 80
    BitwiseAnd  shift, and go to state 81
    BitwiseOR   shift, and go to state 82

    $default  reduce using rule 20 (statements)

    BitOperations  go to state 85


state 96

    3 line: statements SEMICOLON line .

    $default  reduce using rule 3 (line)


state 97

   18 statements: multiplearguments ASSIGN expr .
   56 expr: expr . BitOperations factor

    XOR         shift, and go to state 80
    BitwiseAnd  shift, and go to state 81
    BitwiseOR   shift, and go to state 82

    $default  reduce using rule 18 (statements)

    BitOperations  go to state 85


state 98

   46 multipleConditions: condition logicals multipleConditions .

    $default  reduce using rule 46 (multipleConditions)


state 99

   47 condition: expr comparsions expr .
   56 expr: expr . BitOperations factor

    XOR         shift, and go to state 80
    BitwiseAnd  shift, and go to state 81
    BitwiseOR   shift, and go to state 82

    $default  reduce using rule 47 (condition)

    BitOperations  go to state 85


state 100

   56 expr: expr BitOperations factor .

    $default  reduce using rule 56 (expr)


state 101

   59 expr2: expr2 MathOperations factor .

    $default  reduce using rule 59 (expr2)


state 102

   61 term: term MUL factor .

    $default  reduce using rule 61 (term)


state 103

   62 term: term DIV factor .

    $default  reduce using rule 62 (term)
