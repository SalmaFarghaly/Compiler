Nonterminals useless in grammar

   argument


Terminals unused in grammar

   DOUBLE
   RETURN
   XOR
   SS
   REM
   IF
   THEN
   OB
   CB


Rules useless in grammar

   53 argument: type variable
   54         | variable


Grammar

    0 $accept: line $end

    1 line: statements SEMICOLON
    2     | statements SEMICOLON line

    3 type: INT
    4     | CHAR
    5     | FLOAT
    6     | VOID
    7     | STRING
    8     | BOOL

    9 variable: IDENTIFIER

   10 statements: multiplearguments
   11           | CONST type variable ASSIGN number
   12           | CONST type variable ASSIGN string
   13           | multiplearguments ASSIGN string
   14           | multiplearguments ASSIGN expr
   15           | variable ASSIGN string
   16           | variable ASSIGN expr
   17           | variable INC
   18           | variable DEC
   19           | multipleConditions

   20 multiplearguments: type variable
   21                  | type variable multipledeclarations

   22 multipledeclarations: COMMA variable
   23                     | COMMA variable multipledeclarations

   24 comparsions: Equals
   25            | GE
   26            | LE
   27            | L
   28            | G

   29 Equals: EQ
   30       | NEQ

   31 BOOLEANS: TRUE
   32         | FALSE

   33 multipleConditions: condition
   34                   | condition logicals multipleConditions

   35 condition: expr comparsions expr

   36 logicals: AND
   37         | OR

   38 number: NUM
   39       | DECIMAL

   40 string: EXPSTR
   41       | EXPCHAR

   42 operation: ADD
   43          | SUB

   44 expr: expr operation factor
   45     | term
   46     | BOOLEANS

   47 term: term MUL factor
   48     | term DIV factor
   49     | factor

   50 factor: number
   51       | variable
   52       | OP expr CP


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER (258) 9
NUM (259) 38
DECIMAL (260) 39
EXPCHAR (261) 41
EXPSTR (262) 40
CHAR (263) 4
INT (264) 3
FLOAT (265) 5
DOUBLE (266)
STRING (267) 7
VOID (268) 6
RETURN (269)
BOOL (270) 8
EQ (271) 29
LE (272) 26
GE (273) 25
AND (274) 36
OR (275) 37
XOR (276)
L (277) 27
G (278) 28
NEQ (279) 30
ASSIGN (280) 11 12 13 14 15 16
SS (281)
ADD (282) 42
SUB (283) 43
MUL (284) 47
DIV (285) 48
INC (286) 17
DEC (287) 18
REM (288)
SEMICOLON (289) 1 2
COMMA (290) 22 23
IF (291)
THEN (292)
CONST (293) 11 12
OP (294) 52
CP (295) 52
OB (296)
CB (297)
FALSE (298) 32
TRUE (299) 31


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
line (46)
    on left: 1 2, on right: 0 2
type (47)
    on left: 3 4 5 6 7 8, on right: 11 12 20 21
variable (48)
    on left: 9, on right: 11 12 15 16 17 18 20 21 22 23 51
statements (49)
    on left: 10 11 12 13 14 15 16 17 18 19, on right: 1 2
multiplearguments (50)
    on left: 20 21, on right: 10 13 14
multipledeclarations (51)
    on left: 22 23, on right: 21 23
comparsions (52)
    on left: 24 25 26 27 28, on right: 35
Equals (53)
    on left: 29 30, on right: 24
BOOLEANS (54)
    on left: 31 32, on right: 46
multipleConditions (55)
    on left: 33 34, on right: 19 34
condition (56)
    on left: 35, on right: 33 34
logicals (57)
    on left: 36 37, on right: 34
number (58)
    on left: 38 39, on right: 11 50
string (59)
    on left: 40 41, on right: 12 13 15
operation (60)
    on left: 42 43, on right: 44
expr (61)
    on left: 44 45 46, on right: 14 16 35 44 52
term (62)
    on left: 47 48 49, on right: 45 47 48
factor (63)
    on left: 50 51 52, on right: 44 47 48 49


state 0

    0 $accept: . line $end

    IDENTIFIER  shift, and go to state 1
    NUM         shift, and go to state 2
    DECIMAL     shift, and go to state 3
    CHAR        shift, and go to state 4
    INT         shift, and go to state 5
    FLOAT       shift, and go to state 6
    STRING      shift, and go to state 7
    VOID        shift, and go to state 8
    BOOL        shift, and go to state 9
    CONST       shift, and go to state 10
    OP          shift, and go to state 11
    FALSE       shift, and go to state 12
    TRUE        shift, and go to state 13

    line                go to state 14
    type                go to state 15
    variable            go to state 16
    statements          go to state 17
    multiplearguments   go to state 18
    BOOLEANS            go to state 19
    multipleConditions  go to state 20
    condition           go to state 21
    number              go to state 22
    expr                go to state 23
    term                go to state 24
    factor              go to state 25


state 1

    9 variable: IDENTIFIER .

    $default  reduce using rule 9 (variable)


state 2

   38 number: NUM .

    $default  reduce using rule 38 (number)


state 3

   39 number: DECIMAL .

    $default  reduce using rule 39 (number)


state 4

    4 type: CHAR .

    $default  reduce using rule 4 (type)


state 5

    3 type: INT .

    $default  reduce using rule 3 (type)


state 6

    5 type: FLOAT .

    $default  reduce using rule 5 (type)


state 7

    7 type: STRING .

    $default  reduce using rule 7 (type)


state 8

    6 type: VOID .

    $default  reduce using rule 6 (type)


state 9

    8 type: BOOL .

    $default  reduce using rule 8 (type)


state 10

   11 statements: CONST . type variable ASSIGN number
   12           | CONST . type variable ASSIGN string

    CHAR    shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    STRING  shift, and go to state 7
    VOID    shift, and go to state 8
    BOOL    shift, and go to state 9

    type  go to state 26


state 11

   52 factor: OP . expr CP

    IDENTIFIER  shift, and go to state 1
    NUM         shift, and go to state 2
    DECIMAL     shift, and go to state 3
    OP          shift, and go to state 11
    FALSE       shift, and go to state 12
    TRUE        shift, and go to state 13

    variable  go to state 27
    BOOLEANS  go to state 19
    number    go to state 22
    expr      go to state 28
    term      go to state 24
    factor    go to state 25


state 12

   32 BOOLEANS: FALSE .

    $default  reduce using rule 32 (BOOLEANS)


state 13

   31 BOOLEANS: TRUE .

    $default  reduce using rule 31 (BOOLEANS)


state 14

    0 $accept: line . $end

    $end  shift, and go to state 29


state 15

   20 multiplearguments: type . variable
   21                  | type . variable multipledeclarations

    IDENTIFIER  shift, and go to state 1

    variable  go to state 30


state 16

   15 statements: variable . ASSIGN string
   16           | variable . ASSIGN expr
   17           | variable . INC
   18           | variable . DEC
   51 factor: variable .

    ASSIGN  shift, and go to state 31
    INC     shift, and go to state 32
    DEC     shift, and go to state 33

    $default  reduce using rule 51 (factor)


state 17

    1 line: statements . SEMICOLON
    2     | statements . SEMICOLON line

    SEMICOLON  shift, and go to state 34


state 18

   10 statements: multiplearguments .
   13           | multiplearguments . ASSIGN string
   14           | multiplearguments . ASSIGN expr

    ASSIGN  shift, and go to state 35

    $default  reduce using rule 10 (statements)


state 19

   46 expr: BOOLEANS .

    $default  reduce using rule 46 (expr)


state 20

   19 statements: multipleConditions .

    $default  reduce using rule 19 (statements)


state 21

   33 multipleConditions: condition .
   34                   | condition . logicals multipleConditions

    AND  shift, and go to state 36
    OR   shift, and go to state 37

    $default  reduce using rule 33 (multipleConditions)

    logicals  go to state 38


state 22

   50 factor: number .

    $default  reduce using rule 50 (factor)


state 23

   35 condition: expr . comparsions expr
   44 expr: expr . operation factor

    EQ   shift, and go to state 39
    LE   shift, and go to state 40
    GE   shift, and go to state 41
    L    shift, and go to state 42
    G    shift, and go to state 43
    NEQ  shift, and go to state 44
    ADD  shift, and go to state 45
    SUB  shift, and go to state 46

    comparsions  go to state 47
    Equals       go to state 48
    operation    go to state 49


state 24

   45 expr: term .
   47 term: term . MUL factor
   48     | term . DIV factor

    MUL  shift, and go to state 50
    DIV  shift, and go to state 51

    $default  reduce using rule 45 (expr)


state 25

   49 term: factor .

    $default  reduce using rule 49 (term)


state 26

   11 statements: CONST type . variable ASSIGN number
   12           | CONST type . variable ASSIGN string

    IDENTIFIER  shift, and go to state 1

    variable  go to state 52


state 27

   51 factor: variable .

    $default  reduce using rule 51 (factor)


state 28

   44 expr: expr . operation factor
   52 factor: OP expr . CP

    ADD  shift, and go to state 45
    SUB  shift, and go to state 46
    CP   shift, and go to state 53

    operation  go to state 49


state 29

    0 $accept: line $end .

    $default  accept


state 30

   20 multiplearguments: type variable .
   21                  | type variable . multipledeclarations

    COMMA  shift, and go to state 54

    $default  reduce using rule 20 (multiplearguments)

    multipledeclarations  go to state 55


state 31

   15 statements: variable ASSIGN . string
   16           | variable ASSIGN . expr

    IDENTIFIER  shift, and go to state 1
    NUM         shift, and go to state 2
    DECIMAL     shift, and go to state 3
    EXPCHAR     shift, and go to state 56
    EXPSTR      shift, and go to state 57
    OP          shift, and go to state 11
    FALSE       shift, and go to state 12
    TRUE        shift, and go to state 13

    variable  go to state 27
    BOOLEANS  go to state 19
    number    go to state 22
    string    go to state 58
    expr      go to state 59
    term      go to state 24
    factor    go to state 25


state 32

   17 statements: variable INC .

    $default  reduce using rule 17 (statements)


state 33

   18 statements: variable DEC .

    $default  reduce using rule 18 (statements)


state 34

    1 line: statements SEMICOLON .
    2     | statements SEMICOLON . line

    IDENTIFIER  shift, and go to state 1
    NUM         shift, and go to state 2
    DECIMAL     shift, and go to state 3
    CHAR        shift, and go to state 4
    INT         shift, and go to state 5
    FLOAT       shift, and go to state 6
    STRING      shift, and go to state 7
    VOID        shift, and go to state 8
    BOOL        shift, and go to state 9
    CONST       shift, and go to state 10
    OP          shift, and go to state 11
    FALSE       shift, and go to state 12
    TRUE        shift, and go to state 13

    $default  reduce using rule 1 (line)

    line                go to state 60
    type                go to state 15
    variable            go to state 16
    statements          go to state 17
    multiplearguments   go to state 18
    BOOLEANS            go to state 19
    multipleConditions  go to state 20
    condition           go to state 21
    number              go to state 22
    expr                go to state 23
    term                go to state 24
    factor              go to state 25


state 35

   13 statements: multiplearguments ASSIGN . string
   14           | multiplearguments ASSIGN . expr

    IDENTIFIER  shift, and go to state 1
    NUM         shift, and go to state 2
    DECIMAL     shift, and go to state 3
    EXPCHAR     shift, and go to state 56
    EXPSTR      shift, and go to state 57
    OP          shift, and go to state 11
    FALSE       shift, and go to state 12
    TRUE        shift, and go to state 13

    variable  go to state 27
    BOOLEANS  go to state 19
    number    go to state 22
    string    go to state 61
    expr      go to state 62
    term      go to state 24
    factor    go to state 25


state 36

   36 logicals: AND .

    $default  reduce using rule 36 (logicals)


state 37

   37 logicals: OR .

    $default  reduce using rule 37 (logicals)


state 38

   34 multipleConditions: condition logicals . multipleConditions

    IDENTIFIER  shift, and go to state 1
    NUM         shift, and go to state 2
    DECIMAL     shift, and go to state 3
    OP          shift, and go to state 11
    FALSE       shift, and go to state 12
    TRUE        shift, and go to state 13

    variable            go to state 27
    BOOLEANS            go to state 19
    multipleConditions  go to state 63
    condition           go to state 21
    number              go to state 22
    expr                go to state 23
    term                go to state 24
    factor              go to state 25


state 39

   29 Equals: EQ .

    $default  reduce using rule 29 (Equals)


state 40

   26 comparsions: LE .

    $default  reduce using rule 26 (comparsions)


state 41

   25 comparsions: GE .

    $default  reduce using rule 25 (comparsions)


state 42

   27 comparsions: L .

    $default  reduce using rule 27 (comparsions)


state 43

   28 comparsions: G .

    $default  reduce using rule 28 (comparsions)


state 44

   30 Equals: NEQ .

    $default  reduce using rule 30 (Equals)


state 45

   42 operation: ADD .

    $default  reduce using rule 42 (operation)


state 46

   43 operation: SUB .

    $default  reduce using rule 43 (operation)


state 47

   35 condition: expr comparsions . expr

    IDENTIFIER  shift, and go to state 1
    NUM         shift, and go to state 2
    DECIMAL     shift, and go to state 3
    OP          shift, and go to state 11
    FALSE       shift, and go to state 12
    TRUE        shift, and go to state 13

    variable  go to state 27
    BOOLEANS  go to state 19
    number    go to state 22
    expr      go to state 64
    term      go to state 24
    factor    go to state 25


state 48

   24 comparsions: Equals .

    $default  reduce using rule 24 (comparsions)


state 49

   44 expr: expr operation . factor

    IDENTIFIER  shift, and go to state 1
    NUM         shift, and go to state 2
    DECIMAL     shift, and go to state 3
    OP          shift, and go to state 11

    variable  go to state 27
    number    go to state 22
    factor    go to state 65


state 50

   47 term: term MUL . factor

    IDENTIFIER  shift, and go to state 1
    NUM         shift, and go to state 2
    DECIMAL     shift, and go to state 3
    OP          shift, and go to state 11

    variable  go to state 27
    number    go to state 22
    factor    go to state 66


state 51

   48 term: term DIV . factor

    IDENTIFIER  shift, and go to state 1
    NUM         shift, and go to state 2
    DECIMAL     shift, and go to state 3
    OP          shift, and go to state 11

    variable  go to state 27
    number    go to state 22
    factor    go to state 67


state 52

   11 statements: CONST type variable . ASSIGN number
   12           | CONST type variable . ASSIGN string

    ASSIGN  shift, and go to state 68


state 53

   52 factor: OP expr CP .

    $default  reduce using rule 52 (factor)


state 54

   22 multipledeclarations: COMMA . variable
   23                     | COMMA . variable multipledeclarations

    IDENTIFIER  shift, and go to state 1

    variable  go to state 69


state 55

   21 multiplearguments: type variable multipledeclarations .

    $default  reduce using rule 21 (multiplearguments)


state 56

   41 string: EXPCHAR .

    $default  reduce using rule 41 (string)


state 57

   40 string: EXPSTR .

    $default  reduce using rule 40 (string)


state 58

   15 statements: variable ASSIGN string .

    $default  reduce using rule 15 (statements)


state 59

   16 statements: variable ASSIGN expr .
   44 expr: expr . operation factor

    ADD  shift, and go to state 45
    SUB  shift, and go to state 46

    $default  reduce using rule 16 (statements)

    operation  go to state 49


state 60

    2 line: statements SEMICOLON line .

    $default  reduce using rule 2 (line)


state 61

   13 statements: multiplearguments ASSIGN string .

    $default  reduce using rule 13 (statements)


state 62

   14 statements: multiplearguments ASSIGN expr .
   44 expr: expr . operation factor

    ADD  shift, and go to state 45
    SUB  shift, and go to state 46

    $default  reduce using rule 14 (statements)

    operation  go to state 49


state 63

   34 multipleConditions: condition logicals multipleConditions .

    $default  reduce using rule 34 (multipleConditions)


state 64

   35 condition: expr comparsions expr .
   44 expr: expr . operation factor

    ADD  shift, and go to state 45
    SUB  shift, and go to state 46

    $default  reduce using rule 35 (condition)

    operation  go to state 49


state 65

   44 expr: expr operation factor .

    $default  reduce using rule 44 (expr)


state 66

   47 term: term MUL factor .

    $default  reduce using rule 47 (term)


state 67

   48 term: term DIV factor .

    $default  reduce using rule 48 (term)


state 68

   11 statements: CONST type variable ASSIGN . number
   12           | CONST type variable ASSIGN . string

    NUM      shift, and go to state 2
    DECIMAL  shift, and go to state 3
    EXPCHAR  shift, and go to state 56
    EXPSTR   shift, and go to state 57

    number  go to state 70
    string  go to state 71


state 69

   22 multipledeclarations: COMMA variable .
   23                     | COMMA variable . multipledeclarations

    COMMA  shift, and go to state 54

    $default  reduce using rule 22 (multipledeclarations)

    multipledeclarations  go to state 72


state 70

   11 statements: CONST type variable ASSIGN number .

    $default  reduce using rule 11 (statements)


state 71

   12 statements: CONST type variable ASSIGN string .

    $default  reduce using rule 12 (statements)


state 72

   23 multipledeclarations: COMMA variable multipledeclarations .

    $default  reduce using rule 23 (multipledeclarations)
