Terminals unused in grammar

   DOUBLE
   FUNCNAME
   REM
   IF
   THEN


Grammar

    0 $accept: block $end

    1 block: line
    2      | line block
    3      | OB line CB
    4      | OB line CB block
    5      | OB line block CB
    6      | OB line block CB block

    7 line: statements SEMICOLON
    8     | function_decl
    9     | function_def

   10 statements: var_declaration
   11           | const_declaration
   12           | identifier_assignment
   13           | variable INC
   14           | variable DEC
   15           | multiple_conditions
   16           | return_stmt

   17 var_declaration: type variable var_assignment
   18                | type variable var_assignment multiple_var_declarations

   19 var_assignment: /* empty */
   20               | ASSIGN string
   21               | ASSIGN expr

   22 multiple_var_declarations: COMMA variable var_assignment
   23                          | COMMA variable var_assignment multiple_var_declarations

   24 const_declaration: CONST type variable const_assignment
   25                  | CONST type variable const_assignment multiple_const_declarations

   26 multiple_const_declarations: COMMA variable const_assignment
   27                            | COMMA variable const_assignment multiple_const_declarations

   28 const_assignment: ASSIGN number
   29                 | ASSIGN string

   30 identifier_assignment: variable ASSIGN string
   31                      | variable ASSIGN expr

   32 ob: OB

   33 function_decl: type variable OP func_params CP SEMICOLON
   34              | VOID variable OP func_params CP SEMICOLON

   35 function_def: type variable OP func_params CP ob block CB
   36             | VOID variable OP func_params CP ob block CB

   37 func_params: /* empty */
   38            | type variable
   39            | type variable multiple_parameters

   40 multiple_parameters: COMMA type variable
   41                    | COMMA type variable multiple_parameters

   42 type: INT
   43     | CHAR
   44     | FLOAT
   45     | STRING
   46     | BOOL

   47 variable: IDENTIFIER

   48 comparsions: equals
   49            | GE
   50            | LE
   51            | L
   52            | G

   53 equals: EQ
   54       | NEQ

   55 bit_operations: XOR
   56               | BitwiseOR
   57               | BitwiseAnd

   58 booleans: TRUE
   59         | FALSE

   60 multiple_conditions: condition
   61                    | condition logicals multiple_conditions

   62 condition: expr comparsions expr

   63 logicals: AND
   64         | OR

   65 number: NUM
   66       | DECIMAL

   67 string: EXPSTR
   68       | EXPCHAR

   69 math_operations: ADD
   70                | SUB

   71 expr: expr bit_operations factor
   72     | expr2
   73     | booleans

   74 expr2: expr2 math_operations factor
   75      | term

   76 term: term MUL factor
   77     | term DIV factor
   78     | factor

   79 factor: number
   80       | IDENTIFIER
   81       | OP expr CP

   82 return_stmt: RETURN expr
   83            | RETURN


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER (258) 47 80
NUM (259) 65
DECIMAL (260) 66
EXPCHAR (261) 68
EXPSTR (262) 67
CHAR (263) 43
INT (264) 42
FLOAT (265) 44
DOUBLE (266)
STRING (267) 45
VOID (268) 34 36
RETURN (269) 82 83
BOOL (270) 46
EQ (271) 53
LE (272) 50
GE (273) 49
AND (274) 63
OR (275) 64
L (276) 51
G (277) 52
NEQ (278) 54
ASSIGN (279) 20 21 28 29 30 31
FUNCNAME (280)
ADD (281) 69
SUB (282) 70
MUL (283) 76
DIV (284) 77
INC (285) 13
DEC (286) 14
REM (287)
XOR (288) 55
BitwiseAnd (289) 57
BitwiseOR (290) 56
SEMICOLON (291) 7 33 34
COMMA (292) 22 23 26 27 40 41
IF (293)
THEN (294)
CONST (295) 24 25
OP (296) 33 34 35 36 81
CP (297) 33 34 35 36 81
OB (298) 3 4 5 6 32
CB (299) 3 4 5 6 35 36
FALSE (300) 59
TRUE (301) 58


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
block (48)
    on left: 1 2 3 4 5 6, on right: 0 2 4 5 6 35 36
line (49)
    on left: 7 8 9, on right: 1 2 3 4 5 6
statements (50)
    on left: 10 11 12 13 14 15 16, on right: 7
var_declaration (51)
    on left: 17 18, on right: 10
var_assignment (52)
    on left: 19 20 21, on right: 17 18 22 23
multiple_var_declarations (53)
    on left: 22 23, on right: 18 23
const_declaration (54)
    on left: 24 25, on right: 11
multiple_const_declarations (55)
    on left: 26 27, on right: 25 27
const_assignment (56)
    on left: 28 29, on right: 24 25 26 27
identifier_assignment (57)
    on left: 30 31, on right: 12
ob (58)
    on left: 32, on right: 35 36
function_decl (59)
    on left: 33 34, on right: 8
function_def (60)
    on left: 35 36, on right: 9
func_params (61)
    on left: 37 38 39, on right: 33 34 35 36
multiple_parameters (62)
    on left: 40 41, on right: 39 41
type (63)
    on left: 42 43 44 45 46, on right: 17 18 24 25 33 35 38 39 40 41
variable (64)
    on left: 47, on right: 13 14 17 18 22 23 24 25 26 27 30 31 33 34
    35 36 38 39 40 41
comparsions (65)
    on left: 48 49 50 51 52, on right: 62
equals (66)
    on left: 53 54, on right: 48
bit_operations (67)
    on left: 55 56 57, on right: 71
booleans (68)
    on left: 58 59, on right: 73
multiple_conditions (69)
    on left: 60 61, on right: 15 61
condition (70)
    on left: 62, on right: 60 61
logicals (71)
    on left: 63 64, on right: 61
number (72)
    on left: 65 66, on right: 28 79
string (73)
    on left: 67 68, on right: 20 29 30
math_operations (74)
    on left: 69 70, on right: 74
expr (75)
    on left: 71 72 73, on right: 21 31 62 71 81 82
expr2 (76)
    on left: 74 75, on right: 72 74
term (77)
    on left: 76 77 78, on right: 75 76 77
factor (78)
    on left: 79 80 81, on right: 71 74 76 77 78
return_stmt (79)
    on left: 82 83, on right: 16


state 0

    0 $accept: . block $end

    IDENTIFIER  shift, and go to state 1
    NUM         shift, and go to state 2
    DECIMAL     shift, and go to state 3
    CHAR        shift, and go to state 4
    INT         shift, and go to state 5
    FLOAT       shift, and go to state 6
    STRING      shift, and go to state 7
    VOID        shift, and go to state 8
    RETURN      shift, and go to state 9
    BOOL        shift, and go to state 10
    CONST       shift, and go to state 11
    OP          shift, and go to state 12
    OB          shift, and go to state 13
    FALSE       shift, and go to state 14
    TRUE        shift, and go to state 15

    block                  go to state 16
    line                   go to state 17
    statements             go to state 18
    var_declaration        go to state 19
    const_declaration      go to state 20
    identifier_assignment  go to state 21
    function_decl          go to state 22
    function_def           go to state 23
    type                   go to state 24
    variable               go to state 25
    booleans               go to state 26
    multiple_conditions    go to state 27
    condition              go to state 28
    number                 go to state 29
    expr                   go to state 30
    expr2                  go to state 31
    term                   go to state 32
    factor                 go to state 33
    return_stmt            go to state 34


state 1

   47 variable: IDENTIFIER .
   80 factor: IDENTIFIER .

    ASSIGN    reduce using rule 47 (variable)
    INC       reduce using rule 47 (variable)
    DEC       reduce using rule 47 (variable)
    $default  reduce using rule 80 (factor)


state 2

   65 number: NUM .

    $default  reduce using rule 65 (number)


state 3

   66 number: DECIMAL .

    $default  reduce using rule 66 (number)


state 4

   43 type: CHAR .

    $default  reduce using rule 43 (type)


state 5

   42 type: INT .

    $default  reduce using rule 42 (type)


state 6

   44 type: FLOAT .

    $default  reduce using rule 44 (type)


state 7

   45 type: STRING .

    $default  reduce using rule 45 (type)


state 8

   34 function_decl: VOID . variable OP func_params CP SEMICOLON
   36 function_def: VOID . variable OP func_params CP ob block CB

    IDENTIFIER  shift, and go to state 35

    variable  go to state 36


state 9

   82 return_stmt: RETURN . expr
   83            | RETURN .

    IDENTIFIER  shift, and go to state 37
    NUM         shift, and go to state 2
    DECIMAL     shift, and go to state 3
    OP          shift, and go to state 12
    FALSE       shift, and go to state 14
    TRUE        shift, and go to state 15

    $default  reduce using rule 83 (return_stmt)

    booleans  go to state 26
    number    go to state 29
    expr      go to state 38
    expr2     go to state 31
    term      go to state 32
    factor    go to state 33


state 10

   46 type: BOOL .

    $default  reduce using rule 46 (type)


state 11

   24 const_declaration: CONST . type variable const_assignment
   25                  | CONST . type variable const_assignment multiple_const_declarations

    CHAR    shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    STRING  shift, and go to state 7
    BOOL    shift, and go to state 10

    type  go to state 39


state 12

   81 factor: OP . expr CP

    IDENTIFIER  shift, and go to state 37
    NUM         shift, and go to state 2
    DECIMAL     shift, and go to state 3
    OP          shift, and go to state 12
    FALSE       shift, and go to state 14
    TRUE        shift, and go to state 15

    booleans  go to state 26
    number    go to state 29
    expr      go to state 40
    expr2     go to state 31
    term      go to state 32
    factor    go to state 33


state 13

    3 block: OB . line CB
    4      | OB . line CB block
    5      | OB . line block CB
    6      | OB . line block CB block

    IDENTIFIER  shift, and go to state 1
    NUM         shift, and go to state 2
    DECIMAL     shift, and go to state 3
    CHAR        shift, and go to state 4
    INT         shift, and go to state 5
    FLOAT       shift, and go to state 6
    STRING      shift, and go to state 7
    VOID        shift, and go to state 8
    RETURN      shift, and go to state 9
    BOOL        shift, and go to state 10
    CONST       shift, and go to state 11
    OP          shift, and go to state 12
    FALSE       shift, and go to state 14
    TRUE        shift, and go to state 15

    line                   go to state 41
    statements             go to state 18
    var_declaration        go to state 19
    const_declaration      go to state 20
    identifier_assignment  go to state 21
    function_decl          go to state 22
    function_def           go to state 23
    type                   go to state 24
    variable               go to state 25
    booleans               go to state 26
    multiple_conditions    go to state 27
    condition              go to state 28
    number                 go to state 29
    expr                   go to state 30
    expr2                  go to state 31
    term                   go to state 32
    factor                 go to state 33
    return_stmt            go to state 34


state 14

   59 booleans: FALSE .

    $default  reduce using rule 59 (booleans)


state 15

   58 booleans: TRUE .

    $default  reduce using rule 58 (booleans)


state 16

    0 $accept: block . $end

    $end  shift, and go to state 42


state 17

    1 block: line .
    2      | line . block

    IDENTIFIER  shift, and go to state 1
    NUM         shift, and go to state 2
    DECIMAL     shift, and go to state 3
    CHAR        shift, and go to state 4
    INT         shift, and go to state 5
    FLOAT       shift, and go to state 6
    STRING      shift, and go to state 7
    VOID        shift, and go to state 8
    RETURN      shift, and go to state 9
    BOOL        shift, and go to state 10
    CONST       shift, and go to state 11
    OP          shift, and go to state 12
    OB          shift, and go to state 13
    FALSE       shift, and go to state 14
    TRUE        shift, and go to state 15

    $default  reduce using rule 1 (block)

    block                  go to state 43
    line                   go to state 17
    statements             go to state 18
    var_declaration        go to state 19
    const_declaration      go to state 20
    identifier_assignment  go to state 21
    function_decl          go to state 22
    function_def           go to state 23
    type                   go to state 24
    variable               go to state 25
    booleans               go to state 26
    multiple_conditions    go to state 27
    condition              go to state 28
    number                 go to state 29
    expr                   go to state 30
    expr2                  go to state 31
    term                   go to state 32
    factor                 go to state 33
    return_stmt            go to state 34


state 18

    7 line: statements . SEMICOLON

    SEMICOLON  shift, and go to state 44


state 19

   10 statements: var_declaration .

    $default  reduce using rule 10 (statements)


state 20

   11 statements: const_declaration .

    $default  reduce using rule 11 (statements)


state 21

   12 statements: identifier_assignment .

    $default  reduce using rule 12 (statements)


state 22

    8 line: function_decl .

    $default  reduce using rule 8 (line)


state 23

    9 line: function_def .

    $default  reduce using rule 9 (line)


state 24

   17 var_declaration: type . variable var_assignment
   18                | type . variable var_assignment multiple_var_declarations
   33 function_decl: type . variable OP func_params CP SEMICOLON
   35 function_def: type . variable OP func_params CP ob block CB

    IDENTIFIER  shift, and go to state 35

    variable  go to state 45


state 25

   13 statements: variable . INC
   14           | variable . DEC
   30 identifier_assignment: variable . ASSIGN string
   31                      | variable . ASSIGN expr

    ASSIGN  shift, and go to state 46
    INC     shift, and go to state 47
    DEC     shift, and go to state 48


state 26

   73 expr: booleans .

    $default  reduce using rule 73 (expr)


state 27

   15 statements: multiple_conditions .

    $default  reduce using rule 15 (statements)


state 28

   60 multiple_conditions: condition .
   61                    | condition . logicals multiple_conditions

    AND  shift, and go to state 49
    OR   shift, and go to state 50

    $default  reduce using rule 60 (multiple_conditions)

    logicals  go to state 51


state 29

   79 factor: number .

    $default  reduce using rule 79 (factor)


state 30

   62 condition: expr . comparsions expr
   71 expr: expr . bit_operations factor

    EQ          shift, and go to state 52
    LE          shift, and go to state 53
    GE          shift, and go to state 54
    L           shift, and go to state 55
    G           shift, and go to state 56
    NEQ         shift, and go to state 57
    XOR         shift, and go to state 58
    BitwiseAnd  shift, and go to state 59
    BitwiseOR   shift, and go to state 60

    comparsions     go to state 61
    equals          go to state 62
    bit_operations  go to state 63


state 31

   72 expr: expr2 .
   74 expr2: expr2 . math_operations factor

    ADD  shift, and go to state 64
    SUB  shift, and go to state 65

    $default  reduce using rule 72 (expr)

    math_operations  go to state 66


state 32

   75 expr2: term .
   76 term: term . MUL factor
   77     | term . DIV factor

    MUL  shift, and go to state 67
    DIV  shift, and go to state 68

    $default  reduce using rule 75 (expr2)


state 33

   78 term: factor .

    $default  reduce using rule 78 (term)


state 34

   16 statements: return_stmt .

    $default  reduce using rule 16 (statements)


state 35

   47 variable: IDENTIFIER .

    $default  reduce using rule 47 (variable)


state 36

   34 function_decl: VOID variable . OP func_params CP SEMICOLON
   36 function_def: VOID variable . OP func_params CP ob block CB

    OP  shift, and go to state 69


state 37

   80 factor: IDENTIFIER .

    $default  reduce using rule 80 (factor)


state 38

   71 expr: expr . bit_operations factor
   82 return_stmt: RETURN expr .

    XOR         shift, and go to state 58
    BitwiseAnd  shift, and go to state 59
    BitwiseOR   shift, and go to state 60

    $default  reduce using rule 82 (return_stmt)

    bit_operations  go to state 63


state 39

   24 const_declaration: CONST type . variable const_assignment
   25                  | CONST type . variable const_assignment multiple_const_declarations

    IDENTIFIER  shift, and go to state 35

    variable  go to state 70


state 40

   71 expr: expr . bit_operations factor
   81 factor: OP expr . CP

    XOR         shift, and go to state 58
    BitwiseAnd  shift, and go to state 59
    BitwiseOR   shift, and go to state 60
    CP          shift, and go to state 71

    bit_operations  go to state 63


state 41

    3 block: OB line . CB
    4      | OB line . CB block
    5      | OB line . block CB
    6      | OB line . block CB block

    IDENTIFIER  shift, and go to state 1
    NUM         shift, and go to state 2
    DECIMAL     shift, and go to state 3
    CHAR        shift, and go to state 4
    INT         shift, and go to state 5
    FLOAT       shift, and go to state 6
    STRING      shift, and go to state 7
    VOID        shift, and go to state 8
    RETURN      shift, and go to state 9
    BOOL        shift, and go to state 10
    CONST       shift, and go to state 11
    OP          shift, and go to state 12
    OB          shift, and go to state 13
    CB          shift, and go to state 72
    FALSE       shift, and go to state 14
    TRUE        shift, and go to state 15

    block                  go to state 73
    line                   go to state 17
    statements             go to state 18
    var_declaration        go to state 19
    const_declaration      go to state 20
    identifier_assignment  go to state 21
    function_decl          go to state 22
    function_def           go to state 23
    type                   go to state 24
    variable               go to state 25
    booleans               go to state 26
    multiple_conditions    go to state 27
    condition              go to state 28
    number                 go to state 29
    expr                   go to state 30
    expr2                  go to state 31
    term                   go to state 32
    factor                 go to state 33
    return_stmt            go to state 34


state 42

    0 $accept: block $end .

    $default  accept


state 43

    2 block: line block .

    $default  reduce using rule 2 (block)


state 44

    7 line: statements SEMICOLON .

    $default  reduce using rule 7 (line)


state 45

   17 var_declaration: type variable . var_assignment
   18                | type variable . var_assignment multiple_var_declarations
   33 function_decl: type variable . OP func_params CP SEMICOLON
   35 function_def: type variable . OP func_params CP ob block CB

    ASSIGN  shift, and go to state 74
    OP      shift, and go to state 75

    $default  reduce using rule 19 (var_assignment)

    var_assignment  go to state 76


state 46

   30 identifier_assignment: variable ASSIGN . string
   31                      | variable ASSIGN . expr

    IDENTIFIER  shift, and go to state 37
    NUM         shift, and go to state 2
    DECIMAL     shift, and go to state 3
    EXPCHAR     shift, and go to state 77
    EXPSTR      shift, and go to state 78
    OP          shift, and go to state 12
    FALSE       shift, and go to state 14
    TRUE        shift, and go to state 15

    booleans  go to state 26
    number    go to state 29
    string    go to state 79
    expr      go to state 80
    expr2     go to state 31
    term      go to state 32
    factor    go to state 33


state 47

   13 statements: variable INC .

    $default  reduce using rule 13 (statements)


state 48

   14 statements: variable DEC .

    $default  reduce using rule 14 (statements)


state 49

   63 logicals: AND .

    $default  reduce using rule 63 (logicals)


state 50

   64 logicals: OR .

    $default  reduce using rule 64 (logicals)


state 51

   61 multiple_conditions: condition logicals . multiple_conditions

    IDENTIFIER  shift, and go to state 37
    NUM         shift, and go to state 2
    DECIMAL     shift, and go to state 3
    OP          shift, and go to state 12
    FALSE       shift, and go to state 14
    TRUE        shift, and go to state 15

    booleans             go to state 26
    multiple_conditions  go to state 81
    condition            go to state 28
    number               go to state 29
    expr                 go to state 30
    expr2                go to state 31
    term                 go to state 32
    factor               go to state 33


state 52

   53 equals: EQ .

    $default  reduce using rule 53 (equals)


state 53

   50 comparsions: LE .

    $default  reduce using rule 50 (comparsions)


state 54

   49 comparsions: GE .

    $default  reduce using rule 49 (comparsions)


state 55

   51 comparsions: L .

    $default  reduce using rule 51 (comparsions)


state 56

   52 comparsions: G .

    $default  reduce using rule 52 (comparsions)


state 57

   54 equals: NEQ .

    $default  reduce using rule 54 (equals)


state 58

   55 bit_operations: XOR .

    $default  reduce using rule 55 (bit_operations)


state 59

   57 bit_operations: BitwiseAnd .

    $default  reduce using rule 57 (bit_operations)


state 60

   56 bit_operations: BitwiseOR .

    $default  reduce using rule 56 (bit_operations)


state 61

   62 condition: expr comparsions . expr

    IDENTIFIER  shift, and go to state 37
    NUM         shift, and go to state 2
    DECIMAL     shift, and go to state 3
    OP          shift, and go to state 12
    FALSE       shift, and go to state 14
    TRUE        shift, and go to state 15

    booleans  go to state 26
    number    go to state 29
    expr      go to state 82
    expr2     go to state 31
    term      go to state 32
    factor    go to state 33


state 62

   48 comparsions: equals .

    $default  reduce using rule 48 (comparsions)


state 63

   71 expr: expr bit_operations . factor

    IDENTIFIER  shift, and go to state 37
    NUM         shift, and go to state 2
    DECIMAL     shift, and go to state 3
    OP          shift, and go to state 12

    number  go to state 29
    factor  go to state 83


state 64

   69 math_operations: ADD .

    $default  reduce using rule 69 (math_operations)


state 65

   70 math_operations: SUB .

    $default  reduce using rule 70 (math_operations)


state 66

   74 expr2: expr2 math_operations . factor

    IDENTIFIER  shift, and go to state 37
    NUM         shift, and go to state 2
    DECIMAL     shift, and go to state 3
    OP          shift, and go to state 12

    number  go to state 29
    factor  go to state 84


state 67

   76 term: term MUL . factor

    IDENTIFIER  shift, and go to state 37
    NUM         shift, and go to state 2
    DECIMAL     shift, and go to state 3
    OP          shift, and go to state 12

    number  go to state 29
    factor  go to state 85


state 68

   77 term: term DIV . factor

    IDENTIFIER  shift, and go to state 37
    NUM         shift, and go to state 2
    DECIMAL     shift, and go to state 3
    OP          shift, and go to state 12

    number  go to state 29
    factor  go to state 86


state 69

   34 function_decl: VOID variable OP . func_params CP SEMICOLON
   36 function_def: VOID variable OP . func_params CP ob block CB

    CHAR    shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    STRING  shift, and go to state 7
    BOOL    shift, and go to state 10

    $default  reduce using rule 37 (func_params)

    func_params  go to state 87
    type         go to state 88


state 70

   24 const_declaration: CONST type variable . const_assignment
   25                  | CONST type variable . const_assignment multiple_const_declarations

    ASSIGN  shift, and go to state 89

    const_assignment  go to state 90


state 71

   81 factor: OP expr CP .

    $default  reduce using rule 81 (factor)


state 72

    3 block: OB line CB .
    4      | OB line CB . block

    IDENTIFIER  shift, and go to state 1
    NUM         shift, and go to state 2
    DECIMAL     shift, and go to state 3
    CHAR        shift, and go to state 4
    INT         shift, and go to state 5
    FLOAT       shift, and go to state 6
    STRING      shift, and go to state 7
    VOID        shift, and go to state 8
    RETURN      shift, and go to state 9
    BOOL        shift, and go to state 10
    CONST       shift, and go to state 11
    OP          shift, and go to state 12
    OB          shift, and go to state 13
    FALSE       shift, and go to state 14
    TRUE        shift, and go to state 15

    $default  reduce using rule 3 (block)

    block                  go to state 91
    line                   go to state 17
    statements             go to state 18
    var_declaration        go to state 19
    const_declaration      go to state 20
    identifier_assignment  go to state 21
    function_decl          go to state 22
    function_def           go to state 23
    type                   go to state 24
    variable               go to state 25
    booleans               go to state 26
    multiple_conditions    go to state 27
    condition              go to state 28
    number                 go to state 29
    expr                   go to state 30
    expr2                  go to state 31
    term                   go to state 32
    factor                 go to state 33
    return_stmt            go to state 34


state 73

    5 block: OB line block . CB
    6      | OB line block . CB block

    CB  shift, and go to state 92


state 74

   20 var_assignment: ASSIGN . string
   21               | ASSIGN . expr

    IDENTIFIER  shift, and go to state 37
    NUM         shift, and go to state 2
    DECIMAL     shift, and go to state 3
    EXPCHAR     shift, and go to state 77
    EXPSTR      shift, and go to state 78
    OP          shift, and go to state 12
    FALSE       shift, and go to state 14
    TRUE        shift, and go to state 15

    booleans  go to state 26
    number    go to state 29
    string    go to state 93
    expr      go to state 94
    expr2     go to state 31
    term      go to state 32
    factor    go to state 33


state 75

   33 function_decl: type variable OP . func_params CP SEMICOLON
   35 function_def: type variable OP . func_params CP ob block CB

    CHAR    shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    STRING  shift, and go to state 7
    BOOL    shift, and go to state 10

    $default  reduce using rule 37 (func_params)

    func_params  go to state 95
    type         go to state 88


state 76

   17 var_declaration: type variable var_assignment .
   18                | type variable var_assignment . multiple_var_declarations

    COMMA  shift, and go to state 96

    $default  reduce using rule 17 (var_declaration)

    multiple_var_declarations  go to state 97


state 77

   68 string: EXPCHAR .

    $default  reduce using rule 68 (string)


state 78

   67 string: EXPSTR .

    $default  reduce using rule 67 (string)


state 79

   30 identifier_assignment: variable ASSIGN string .

    $default  reduce using rule 30 (identifier_assignment)


state 80

   31 identifier_assignment: variable ASSIGN expr .
   71 expr: expr . bit_operations factor

    XOR         shift, and go to state 58
    BitwiseAnd  shift, and go to state 59
    BitwiseOR   shift, and go to state 60

    $default  reduce using rule 31 (identifier_assignment)

    bit_operations  go to state 63


state 81

   61 multiple_conditions: condition logicals multiple_conditions .

    $default  reduce using rule 61 (multiple_conditions)


state 82

   62 condition: expr comparsions expr .
   71 expr: expr . bit_operations factor

    XOR         shift, and go to state 58
    BitwiseAnd  shift, and go to state 59
    BitwiseOR   shift, and go to state 60

    $default  reduce using rule 62 (condition)

    bit_operations  go to state 63


state 83

   71 expr: expr bit_operations factor .

    $default  reduce using rule 71 (expr)


state 84

   74 expr2: expr2 math_operations factor .

    $default  reduce using rule 74 (expr2)


state 85

   76 term: term MUL factor .

    $default  reduce using rule 76 (term)


state 86

   77 term: term DIV factor .

    $default  reduce using rule 77 (term)


state 87

   34 function_decl: VOID variable OP func_params . CP SEMICOLON
   36 function_def: VOID variable OP func_params . CP ob block CB

    CP  shift, and go to state 98


state 88

   38 func_params: type . variable
   39            | type . variable multiple_parameters

    IDENTIFIER  shift, and go to state 35

    variable  go to state 99


state 89

   28 const_assignment: ASSIGN . number
   29                 | ASSIGN . string

    NUM      shift, and go to state 2
    DECIMAL  shift, and go to state 3
    EXPCHAR  shift, and go to state 77
    EXPSTR   shift, and go to state 78

    number  go to state 100
    string  go to state 101


state 90

   24 const_declaration: CONST type variable const_assignment .
   25                  | CONST type variable const_assignment . multiple_const_declarations

    COMMA  shift, and go to state 102

    $default  reduce using rule 24 (const_declaration)

    multiple_const_declarations  go to state 103


state 91

    4 block: OB line CB block .

    $default  reduce using rule 4 (block)


state 92

    5 block: OB line block CB .
    6      | OB line block CB . block

    IDENTIFIER  shift, and go to state 1
    NUM         shift, and go to state 2
    DECIMAL     shift, and go to state 3
    CHAR        shift, and go to state 4
    INT         shift, and go to state 5
    FLOAT       shift, and go to state 6
    STRING      shift, and go to state 7
    VOID        shift, and go to state 8
    RETURN      shift, and go to state 9
    BOOL        shift, and go to state 10
    CONST       shift, and go to state 11
    OP          shift, and go to state 12
    OB          shift, and go to state 13
    FALSE       shift, and go to state 14
    TRUE        shift, and go to state 15

    $default  reduce using rule 5 (block)

    block                  go to state 104
    line                   go to state 17
    statements             go to state 18
    var_declaration        go to state 19
    const_declaration      go to state 20
    identifier_assignment  go to state 21
    function_decl          go to state 22
    function_def           go to state 23
    type                   go to state 24
    variable               go to state 25
    booleans               go to state 26
    multiple_conditions    go to state 27
    condition              go to state 28
    number                 go to state 29
    expr                   go to state 30
    expr2                  go to state 31
    term                   go to state 32
    factor                 go to state 33
    return_stmt            go to state 34


state 93

   20 var_assignment: ASSIGN string .

    $default  reduce using rule 20 (var_assignment)


state 94

   21 var_assignment: ASSIGN expr .
   71 expr: expr . bit_operations factor

    XOR         shift, and go to state 58
    BitwiseAnd  shift, and go to state 59
    BitwiseOR   shift, and go to state 60

    $default  reduce using rule 21 (var_assignment)

    bit_operations  go to state 63


state 95

   33 function_decl: type variable OP func_params . CP SEMICOLON
   35 function_def: type variable OP func_params . CP ob block CB

    CP  shift, and go to state 105


state 96

   22 multiple_var_declarations: COMMA . variable var_assignment
   23                          | COMMA . variable var_assignment multiple_var_declarations

    IDENTIFIER  shift, and go to state 35

    variable  go to state 106


state 97

   18 var_declaration: type variable var_assignment multiple_var_declarations .

    $default  reduce using rule 18 (var_declaration)


state 98

   34 function_decl: VOID variable OP func_params CP . SEMICOLON
   36 function_def: VOID variable OP func_params CP . ob block CB

    SEMICOLON  shift, and go to state 107
    OB         shift, and go to state 108

    ob  go to state 109


state 99

   38 func_params: type variable .
   39            | type variable . multiple_parameters

    COMMA  shift, and go to state 110

    $default  reduce using rule 38 (func_params)

    multiple_parameters  go to state 111


state 100

   28 const_assignment: ASSIGN number .

    $default  reduce using rule 28 (const_assignment)


state 101

   29 const_assignment: ASSIGN string .

    $default  reduce using rule 29 (const_assignment)


state 102

   26 multiple_const_declarations: COMMA . variable const_assignment
   27                            | COMMA . variable const_assignment multiple_const_declarations

    IDENTIFIER  shift, and go to state 35

    variable  go to state 112


state 103

   25 const_declaration: CONST type variable const_assignment multiple_const_declarations .

    $default  reduce using rule 25 (const_declaration)


state 104

    6 block: OB line block CB block .

    $default  reduce using rule 6 (block)


state 105

   33 function_decl: type variable OP func_params CP . SEMICOLON
   35 function_def: type variable OP func_params CP . ob block CB

    SEMICOLON  shift, and go to state 113
    OB         shift, and go to state 108

    ob  go to state 114


state 106

   22 multiple_var_declarations: COMMA variable . var_assignment
   23                          | COMMA variable . var_assignment multiple_var_declarations

    ASSIGN  shift, and go to state 74

    $default  reduce using rule 19 (var_assignment)

    var_assignment  go to state 115


state 107

   34 function_decl: VOID variable OP func_params CP SEMICOLON .

    $default  reduce using rule 34 (function_decl)


state 108

   32 ob: OB .

    $default  reduce using rule 32 (ob)


state 109

   36 function_def: VOID variable OP func_params CP ob . block CB

    IDENTIFIER  shift, and go to state 1
    NUM         shift, and go to state 2
    DECIMAL     shift, and go to state 3
    CHAR        shift, and go to state 4
    INT         shift, and go to state 5
    FLOAT       shift, and go to state 6
    STRING      shift, and go to state 7
    VOID        shift, and go to state 8
    RETURN      shift, and go to state 9
    BOOL        shift, and go to state 10
    CONST       shift, and go to state 11
    OP          shift, and go to state 12
    OB          shift, and go to state 13
    FALSE       shift, and go to state 14
    TRUE        shift, and go to state 15

    block                  go to state 116
    line                   go to state 17
    statements             go to state 18
    var_declaration        go to state 19
    const_declaration      go to state 20
    identifier_assignment  go to state 21
    function_decl          go to state 22
    function_def           go to state 23
    type                   go to state 24
    variable               go to state 25
    booleans               go to state 26
    multiple_conditions    go to state 27
    condition              go to state 28
    number                 go to state 29
    expr                   go to state 30
    expr2                  go to state 31
    term                   go to state 32
    factor                 go to state 33
    return_stmt            go to state 34


state 110

   40 multiple_parameters: COMMA . type variable
   41                    | COMMA . type variable multiple_parameters

    CHAR    shift, and go to state 4
    INT     shift, and go to state 5
    FLOAT   shift, and go to state 6
    STRING  shift, and go to state 7
    BOOL    shift, and go to state 10

    type  go to state 117


state 111

   39 func_params: type variable multiple_parameters .

    $default  reduce using rule 39 (func_params)


state 112

   26 multiple_const_declarations: COMMA variable . const_assignment
   27                            | COMMA variable . const_assignment multiple_const_declarations

    ASSIGN  shift, and go to state 89

    const_assignment  go to state 118


state 113

   33 function_decl: type variable OP func_params CP SEMICOLON .

    $default  reduce using rule 33 (function_decl)


state 114

   35 function_def: type variable OP func_params CP ob . block CB

    IDENTIFIER  shift, and go to state 1
    NUM         shift, and go to state 2
    DECIMAL     shift, and go to state 3
    CHAR        shift, and go to state 4
    INT         shift, and go to state 5
    FLOAT       shift, and go to state 6
    STRING      shift, and go to state 7
    VOID        shift, and go to state 8
    RETURN      shift, and go to state 9
    BOOL        shift, and go to state 10
    CONST       shift, and go to state 11
    OP          shift, and go to state 12
    OB          shift, and go to state 13
    FALSE       shift, and go to state 14
    TRUE        shift, and go to state 15

    block                  go to state 119
    line                   go to state 17
    statements             go to state 18
    var_declaration        go to state 19
    const_declaration      go to state 20
    identifier_assignment  go to state 21
    function_decl          go to state 22
    function_def           go to state 23
    type                   go to state 24
    variable               go to state 25
    booleans               go to state 26
    multiple_conditions    go to state 27
    condition              go to state 28
    number                 go to state 29
    expr                   go to state 30
    expr2                  go to state 31
    term                   go to state 32
    factor                 go to state 33
    return_stmt            go to state 34


state 115

   22 multiple_var_declarations: COMMA variable var_assignment .
   23                          | COMMA variable var_assignment . multiple_var_declarations

    COMMA  shift, and go to state 96

    $default  reduce using rule 22 (multiple_var_declarations)

    multiple_var_declarations  go to state 120


state 116

   36 function_def: VOID variable OP func_params CP ob block . CB

    CB  shift, and go to state 121


state 117

   40 multiple_parameters: COMMA type . variable
   41                    | COMMA type . variable multiple_parameters

    IDENTIFIER  shift, and go to state 35

    variable  go to state 122


state 118

   26 multiple_const_declarations: COMMA variable const_assignment .
   27                            | COMMA variable const_assignment . multiple_const_declarations

    COMMA  shift, and go to state 102

    $default  reduce using rule 26 (multiple_const_declarations)

    multiple_const_declarations  go to state 123


state 119

   35 function_def: type variable OP func_params CP ob block . CB

    CB  shift, and go to state 124


state 120

   23 multiple_var_declarations: COMMA variable var_assignment multiple_var_declarations .

    $default  reduce using rule 23 (multiple_var_declarations)


state 121

   36 function_def: VOID variable OP func_params CP ob block CB .

    $default  reduce using rule 36 (function_def)


state 122

   40 multiple_parameters: COMMA type variable .
   41                    | COMMA type variable . multiple_parameters

    COMMA  shift, and go to state 110

    $default  reduce using rule 40 (multiple_parameters)

    multiple_parameters  go to state 125


state 123

   27 multiple_const_declarations: COMMA variable const_assignment multiple_const_declarations .

    $default  reduce using rule 27 (multiple_const_declarations)


state 124

   35 function_def: type variable OP func_params CP ob block CB .

    $default  reduce using rule 35 (function_def)


state 125

   41 multiple_parameters: COMMA type variable multiple_parameters .

    $default  reduce using rule 41 (multiple_parameters)
